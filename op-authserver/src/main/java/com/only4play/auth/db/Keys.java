/*
 * This file is generated by jOOQ.
 */
package com.only4play.auth.db;


import com.only4play.auth.db.tables.AuthAdminUser;
import com.only4play.auth.db.tables.AuthResource;
import com.only4play.auth.db.tables.AuthRoleResource;
import com.only4play.auth.db.tables.AuthSysUser;
import com.only4play.auth.db.tables.records.AuthAdminUserRecord;
import com.only4play.auth.db.tables.records.AuthResourceRecord;
import com.only4play.auth.db.tables.records.AuthRoleResourceRecord;
import com.only4play.auth.db.tables.records.AuthSysUserRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>authserver</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AuthAdminUserRecord, Long> IDENTITY_AUTH_ADMIN_USER = Identities0.IDENTITY_AUTH_ADMIN_USER;
    public static final Identity<AuthResourceRecord, Long> IDENTITY_AUTH_RESOURCE = Identities0.IDENTITY_AUTH_RESOURCE;
    public static final Identity<AuthRoleResourceRecord, Long> IDENTITY_AUTH_ROLE_RESOURCE = Identities0.IDENTITY_AUTH_ROLE_RESOURCE;
    public static final Identity<AuthSysUserRecord, Long> IDENTITY_AUTH_SYS_USER = Identities0.IDENTITY_AUTH_SYS_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthAdminUserRecord> KEY_AUTH_ADMIN_USER_PRIMARY = UniqueKeys0.KEY_AUTH_ADMIN_USER_PRIMARY;
    public static final UniqueKey<AuthResourceRecord> KEY_AUTH_RESOURCE_PRIMARY = UniqueKeys0.KEY_AUTH_RESOURCE_PRIMARY;
    public static final UniqueKey<AuthRoleResourceRecord> KEY_AUTH_ROLE_RESOURCE_PRIMARY = UniqueKeys0.KEY_AUTH_ROLE_RESOURCE_PRIMARY;
    public static final UniqueKey<AuthSysUserRecord> KEY_AUTH_SYS_USER_PRIMARY = UniqueKeys0.KEY_AUTH_SYS_USER_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AuthAdminUserRecord, Long> IDENTITY_AUTH_ADMIN_USER = Internal.createIdentity(AuthAdminUser.AUTH_ADMIN_USER, AuthAdminUser.AUTH_ADMIN_USER.ID);
        public static Identity<AuthResourceRecord, Long> IDENTITY_AUTH_RESOURCE = Internal.createIdentity(AuthResource.AUTH_RESOURCE, AuthResource.AUTH_RESOURCE.ID);
        public static Identity<AuthRoleResourceRecord, Long> IDENTITY_AUTH_ROLE_RESOURCE = Internal.createIdentity(AuthRoleResource.AUTH_ROLE_RESOURCE, AuthRoleResource.AUTH_ROLE_RESOURCE.ID);
        public static Identity<AuthSysUserRecord, Long> IDENTITY_AUTH_SYS_USER = Internal.createIdentity(AuthSysUser.AUTH_SYS_USER, AuthSysUser.AUTH_SYS_USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AuthAdminUserRecord> KEY_AUTH_ADMIN_USER_PRIMARY = Internal.createUniqueKey(AuthAdminUser.AUTH_ADMIN_USER, "KEY_auth_admin_user_PRIMARY", AuthAdminUser.AUTH_ADMIN_USER.ID);
        public static final UniqueKey<AuthResourceRecord> KEY_AUTH_RESOURCE_PRIMARY = Internal.createUniqueKey(AuthResource.AUTH_RESOURCE, "KEY_auth_resource_PRIMARY", AuthResource.AUTH_RESOURCE.ID);
        public static final UniqueKey<AuthRoleResourceRecord> KEY_AUTH_ROLE_RESOURCE_PRIMARY = Internal.createUniqueKey(AuthRoleResource.AUTH_ROLE_RESOURCE, "KEY_auth_role_resource_PRIMARY", AuthRoleResource.AUTH_ROLE_RESOURCE.ID);
        public static final UniqueKey<AuthSysUserRecord> KEY_AUTH_SYS_USER_PRIMARY = Internal.createUniqueKey(AuthSysUser.AUTH_SYS_USER, "KEY_auth_sys_user_PRIMARY", AuthSysUser.AUTH_SYS_USER.ID);
    }
}
