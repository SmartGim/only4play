/*
 * This file is generated by jOOQ.
 */
package com.only4play.auth.db.tables;


import com.only4play.auth.db.Authserver;
import com.only4play.auth.db.Indexes;
import com.only4play.auth.db.Keys;
import com.only4play.auth.db.tables.records.AuthResourceRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthResource extends TableImpl<AuthResourceRecord> {

    private static final long serialVersionUID = 889089730;

    /**
     * The reference instance of <code>authserver.auth_resource</code>
     */
    public static final AuthResource AUTH_RESOURCE = new AuthResource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuthResourceRecord> getRecordType() {
        return AuthResourceRecord.class;
    }

    /**
     * The column <code>authserver.auth_resource.id</code>.
     */
    public final TableField<AuthResourceRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>authserver.auth_resource.created_at</code>.
     */
    public final TableField<AuthResourceRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>authserver.auth_resource.updated_at</code>.
     */
    public final TableField<AuthResourceRecord, Long> UPDATED_AT = createField(DSL.name("updated_at"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>authserver.auth_resource.version</code>.
     */
    public final TableField<AuthResourceRecord, Integer> VERSION = createField(DSL.name("version"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>authserver.auth_resource.code</code>. 资源编码
     */
    public final TableField<AuthResourceRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "资源编码");

    /**
     * The column <code>authserver.auth_resource.icon_class</code>.
     */
    public final TableField<AuthResourceRecord, String> ICON_CLASS = createField(DSL.name("icon_class"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>authserver.auth_resource.name</code>. 资源名称
     */
    public final TableField<AuthResourceRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "资源名称");

    /**
     * The column <code>authserver.auth_resource.pid</code>. 父id
     */
    public final TableField<AuthResourceRecord, Long> PID = createField(DSL.name("pid"), org.jooq.impl.SQLDataType.BIGINT, this, "父id");

    /**
     * The column <code>authserver.auth_resource.platform_id</code>. 平台id
     */
    public final TableField<AuthResourceRecord, Long> PLATFORM_ID = createField(DSL.name("platform_id"), org.jooq.impl.SQLDataType.BIGINT, this, "平台id");

    /**
     * The column <code>authserver.auth_resource.resource_desc</code>. 资源描述
     */
    public final TableField<AuthResourceRecord, String> RESOURCE_DESC = createField(DSL.name("resource_desc"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "资源描述");

    /**
     * The column <code>authserver.auth_resource.router</code>. 前端路由
     */
    public final TableField<AuthResourceRecord, String> ROUTER = createField(DSL.name("router"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "前端路由");

    /**
     * The column <code>authserver.auth_resource.url</code>. 资源的url
     */
    public final TableField<AuthResourceRecord, String> URL = createField(DSL.name("url"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "资源的url");

    /**
     * Create a <code>authserver.auth_resource</code> table reference
     */
    public AuthResource() {
        this(DSL.name("auth_resource"), null);
    }

    /**
     * Create an aliased <code>authserver.auth_resource</code> table reference
     */
    public AuthResource(String alias) {
        this(DSL.name(alias), AUTH_RESOURCE);
    }

    /**
     * Create an aliased <code>authserver.auth_resource</code> table reference
     */
    public AuthResource(Name alias) {
        this(alias, AUTH_RESOURCE);
    }

    private AuthResource(Name alias, Table<AuthResourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuthResource(Name alias, Table<AuthResourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AuthResource(Table<O> child, ForeignKey<O, AuthResourceRecord> key) {
        super(child, key, AUTH_RESOURCE);
    }

    @Override
    public Schema getSchema() {
        return Authserver.AUTHSERVER;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AUTH_RESOURCE_PRIMARY);
    }

    @Override
    public Identity<AuthResourceRecord, Long> getIdentity() {
        return Keys.IDENTITY_AUTH_RESOURCE;
    }

    @Override
    public UniqueKey<AuthResourceRecord> getPrimaryKey() {
        return Keys.KEY_AUTH_RESOURCE_PRIMARY;
    }

    @Override
    public List<UniqueKey<AuthResourceRecord>> getKeys() {
        return Arrays.<UniqueKey<AuthResourceRecord>>asList(Keys.KEY_AUTH_RESOURCE_PRIMARY);
    }

    @Override
    public AuthResource as(String alias) {
        return new AuthResource(DSL.name(alias), this);
    }

    @Override
    public AuthResource as(Name alias) {
        return new AuthResource(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuthResource rename(String name) {
        return new AuthResource(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AuthResource rename(Name name) {
        return new AuthResource(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, Long, Integer, String, String, String, Long, Long, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
