/*
 * This file is generated by jOOQ.
 */
package com.only4play.auth.db.tables.records;


import com.only4play.auth.db.tables.AuthSysUser;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthSysUserRecord extends UpdatableRecordImpl<AuthSysUserRecord> implements Record11<Long, Long, Long, Integer, Long, String, String, String, String, String, Byte> {

    private static final long serialVersionUID = 1609263392;

    /**
     * Setter for <code>authserver.auth_sys_user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>authserver.auth_sys_user.created_at</code>.
     */
    public void setCreatedAt(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.created_at</code>.
     */
    public Long getCreatedAt() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>authserver.auth_sys_user.updated_at</code>.
     */
    public void setUpdatedAt(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.updated_at</code>.
     */
    public Long getUpdatedAt() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>authserver.auth_sys_user.version</code>.
     */
    public void setVersion(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>authserver.auth_sys_user.depart_id</code>. 部门id
     */
    public void setDepartId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.depart_id</code>. 部门id
     */
    public Long getDepartId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>authserver.auth_sys_user.depart_name</code>. 部门名称
     */
    public void setDepartName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.depart_name</code>. 部门名称
     */
    public String getDepartName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>authserver.auth_sys_user.password</code>. 密码
     */
    public void setPassword(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.password</code>. 密码
     */
    public String getPassword() {
        return (String) get(6);
    }

    /**
     * Setter for <code>authserver.auth_sys_user.phone</code>. 手机号
     */
    public void setPhone(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.phone</code>. 手机号
     */
    public String getPhone() {
        return (String) get(7);
    }

    /**
     * Setter for <code>authserver.auth_sys_user.real_name</code>. 真实姓名
     */
    public void setRealName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.real_name</code>. 真实姓名
     */
    public String getRealName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>authserver.auth_sys_user.username</code>. 用户名
     */
    public void setUsername(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.username</code>. 用户名
     */
    public String getUsername() {
        return (String) get(9);
    }

    /**
     * Setter for <code>authserver.auth_sys_user.valid_status</code>. 是否删除
     */
    public void setValidStatus(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>authserver.auth_sys_user.valid_status</code>. 是否删除
     */
    public Byte getValidStatus() {
        return (Byte) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, Long, Integer, Long, String, String, String, String, String, Byte> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Long, Long, Integer, Long, String, String, String, String, String, Byte> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AuthSysUser.AUTH_SYS_USER.ID;
    }

    @Override
    public Field<Long> field2() {
        return AuthSysUser.AUTH_SYS_USER.CREATED_AT;
    }

    @Override
    public Field<Long> field3() {
        return AuthSysUser.AUTH_SYS_USER.UPDATED_AT;
    }

    @Override
    public Field<Integer> field4() {
        return AuthSysUser.AUTH_SYS_USER.VERSION;
    }

    @Override
    public Field<Long> field5() {
        return AuthSysUser.AUTH_SYS_USER.DEPART_ID;
    }

    @Override
    public Field<String> field6() {
        return AuthSysUser.AUTH_SYS_USER.DEPART_NAME;
    }

    @Override
    public Field<String> field7() {
        return AuthSysUser.AUTH_SYS_USER.PASSWORD;
    }

    @Override
    public Field<String> field8() {
        return AuthSysUser.AUTH_SYS_USER.PHONE;
    }

    @Override
    public Field<String> field9() {
        return AuthSysUser.AUTH_SYS_USER.REAL_NAME;
    }

    @Override
    public Field<String> field10() {
        return AuthSysUser.AUTH_SYS_USER.USERNAME;
    }

    @Override
    public Field<Byte> field11() {
        return AuthSysUser.AUTH_SYS_USER.VALID_STATUS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCreatedAt();
    }

    @Override
    public Long component3() {
        return getUpdatedAt();
    }

    @Override
    public Integer component4() {
        return getVersion();
    }

    @Override
    public Long component5() {
        return getDepartId();
    }

    @Override
    public String component6() {
        return getDepartName();
    }

    @Override
    public String component7() {
        return getPassword();
    }

    @Override
    public String component8() {
        return getPhone();
    }

    @Override
    public String component9() {
        return getRealName();
    }

    @Override
    public String component10() {
        return getUsername();
    }

    @Override
    public Byte component11() {
        return getValidStatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCreatedAt();
    }

    @Override
    public Long value3() {
        return getUpdatedAt();
    }

    @Override
    public Integer value4() {
        return getVersion();
    }

    @Override
    public Long value5() {
        return getDepartId();
    }

    @Override
    public String value6() {
        return getDepartName();
    }

    @Override
    public String value7() {
        return getPassword();
    }

    @Override
    public String value8() {
        return getPhone();
    }

    @Override
    public String value9() {
        return getRealName();
    }

    @Override
    public String value10() {
        return getUsername();
    }

    @Override
    public Byte value11() {
        return getValidStatus();
    }

    @Override
    public AuthSysUserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuthSysUserRecord value2(Long value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AuthSysUserRecord value3(Long value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public AuthSysUserRecord value4(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public AuthSysUserRecord value5(Long value) {
        setDepartId(value);
        return this;
    }

    @Override
    public AuthSysUserRecord value6(String value) {
        setDepartName(value);
        return this;
    }

    @Override
    public AuthSysUserRecord value7(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AuthSysUserRecord value8(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public AuthSysUserRecord value9(String value) {
        setRealName(value);
        return this;
    }

    @Override
    public AuthSysUserRecord value10(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public AuthSysUserRecord value11(Byte value) {
        setValidStatus(value);
        return this;
    }

    @Override
    public AuthSysUserRecord values(Long value1, Long value2, Long value3, Integer value4, Long value5, String value6, String value7, String value8, String value9, String value10, Byte value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthSysUserRecord
     */
    public AuthSysUserRecord() {
        super(AuthSysUser.AUTH_SYS_USER);
    }

    /**
     * Create a detached, initialised AuthSysUserRecord
     */
    public AuthSysUserRecord(Long id, Long createdAt, Long updatedAt, Integer version, Long departId, String departName, String password, String phone, String realName, String username, Byte validStatus) {
        super(AuthSysUser.AUTH_SYS_USER);

        set(0, id);
        set(1, createdAt);
        set(2, updatedAt);
        set(3, version);
        set(4, departId);
        set(5, departName);
        set(6, password);
        set(7, phone);
        set(8, realName);
        set(9, username);
        set(10, validStatus);
    }
}
